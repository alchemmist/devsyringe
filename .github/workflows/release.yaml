name: release
on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, darwin]
        arch: [amd64, arm64]
    outputs:
      artifacts-path: ${{ steps.set-path.outputs.path }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.24
      - name: Get version from tag
        id: get_version
        run: |
          echo "VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - name: Build binary
        run: |
          mkdir -p releases
          ext=""
          if [ "${{ matrix.os }}" == "windows" ]; then ext=".exe"; fi
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o releases/dsy-${{ matrix.os }}-${{ matrix.arch }}${ext} ./cmd/dsy
      - name: Set artifacts path
        id: set-path
        run: echo "::set-output name=path::releases/*"
  release-upload:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Upload binaries as release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          artifacts: releases/*
          generate_release_notes: true
          latest: true
